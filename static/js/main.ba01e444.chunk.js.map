{"version":3,"sources":["Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","timerId","this","startTimer","console","log","clearInterval","setInterval","date","setState","className","type","onClick","React","Component","App","isClockVisible","clockName","Math","trunc","random","generateRandomName","changePage","changeName","name","_","prevState","ReactDOM","render","document","getElementById"],"mappings":"4NAWaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,aALF,yDAOE,WACEC,KAAKD,QAAUC,KAAKC,aAGpBC,QAAQC,IAAIH,KAAKL,MAAMC,QAX3B,kCAcE,WAEEM,QAAQC,IAAI,QAERH,KAAKD,SACPK,cAAcJ,KAAKD,WAnBzB,wBAuBE,WAAc,IAAD,OACX,OAAOM,aAAY,WACjB,IAAMC,EAAa,IAAIT,KAEvB,EAAKU,SAAS,CACZX,KAAMU,EAAKR,uBAGbI,QAAQC,IAAIG,EAAKR,wBAChB,OAhCP,oBAmCE,WAAU,IAAD,OACCF,EAASI,KAAKL,MAAdC,KAER,OACE,sBAAKY,UAAU,GAAf,UACGZ,EACD,wBACEY,UAAU,wCACVC,KAAK,SACLC,QAAS,WACH,EAAKX,SACPK,cAAc,EAAKL,SACnB,EAAKA,QAAU,MAEf,EAAKA,QAAU,EAAKE,cAR1B,yBAzCR,GAA2BU,IAAMC,WCC3BC,E,4MACJlB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,W,EAU7BC,mBAAqB,WACnB,OAAOH,KAAKC,MAAsB,IAAhBD,KAAKE,W,EAGzBE,WAAa,SAACN,GACZ,EAAKP,SAAS,CACZO,iBACAC,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,a,EAI/BG,WAAa,SAACC,GACZ,EAAKf,SAAS,CACZQ,UAAWO,K,wDApBf,SAAmBC,EAAUC,GACvBA,EAAUT,YAAcf,KAAKL,MAAMoB,WAErCb,QAAQC,IAAR,qCAA0CqB,EAAUT,UAApD,eAAoEf,KAAKL,MAAMoB,c,oBAqBnF,WAAU,IAAD,OACP,EAAsCf,KAAKL,MAAnCmB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,sBAAKP,UAAU,MAAf,UACE,oBAAIA,UAAU,0BAAd,yBAEA,sBAAKA,UAAU,yDAAf,UAEE,wBACEA,UAAU,8BACVC,KAAK,SACLC,QACE,kBAAM,EAAKU,YAAW,IAJ1B,wBAUA,wBACEZ,UAAU,8BACVC,KAAK,SACLC,QACE,kBAAM,EAAKU,YAAW,IAJ1B,wBAUA,wBACEZ,UAAU,8BACVC,KAAK,SACLC,QAAS,kBACP,EAAKW,WAAW,EAAKF,uBAJzB,gCAUDL,GACC,sBAAKN,UAAU,mDAAf,UACE,uBAAMA,UAAU,GAAhB,0BAEG,OAEH,cAAC,EAAD,CAAOc,KAAMP,c,GA3EPJ,IAAMC,WAmFTC,IC5FfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ba01e444.chunk.js","sourcesContent":["// import { time, timeStamp } from 'console';\nimport React from 'react';\n\ntype Props = {\n  name: number,\n};\n\ntype State = {\n  time: string,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  };\n\n  timerId?: NodeJS.Timeout | null;\n\n  componentDidMount() {\n    this.timerId = this.startTimer();\n\n    // eslint-disable-next-line no-console\n    console.log(this.state.time);\n  }\n\n  componentWillUnmount() {\n    // eslint-disable-next-line no-console\n    console.log('Test');\n\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  startTimer() {\n    return setInterval(() => {\n      const date: Date = new Date();\n\n      this.setState({\n        time: date.toLocaleTimeString(),\n      });\n      // eslint-disable-next-line\n      console.log(date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <div className=\"\">\n        {time}\n        <button\n          className=\"button ml-6 mt-4 is-black is-inverted\"\n          type=\"button\"\n          onClick={() => {\n            if (this.timerId) {\n              clearInterval(this.timerId);\n              this.timerId = null;\n            } else {\n              this.timerId = this.startTimer();\n            }\n          }}\n        >\n          Stop\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport 'bulma/css/bulma.min.css';\nimport { Clock } from './Clock';\n\ntype Props = {};\n\ntype State = {\n  isClockVisible: boolean;\n  clockName: number;\n};\n\nclass App extends React.Component<Props, State> {\n  state = {\n    isClockVisible: true,\n    clockName: Math.trunc(Math.random() * 500),\n  };\n\n  componentDidUpdate(_: Props, prevState: State) {\n    if (prevState.clockName !== this.state.clockName) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  generateRandomName = () => {\n    return Math.trunc(Math.random() * 500);\n  };\n\n  changePage = (isClockVisible: boolean) => {\n    this.setState({\n      isClockVisible,\n      clockName: Math.trunc(Math.random() * 500),\n    });\n  };\n\n  changeName = (name: number) => {\n    this.setState({\n      clockName: name,\n    });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title has-text-centered\">React clock</h1>\n\n        <div className=\"App has-shadow is-flex is-justify-content-space-evenly\">\n\n          <button\n            className=\"button navbar-item is-light\"\n            type=\"button\"\n            onClick={\n              () => this.changePage(true)\n            }\n          >\n            Show Clock\n          </button>\n\n          <button\n            className=\"button navbar-item is-light\"\n            type=\"button\"\n            onClick={\n              () => this.changePage(false)\n            }\n          >\n            Hide Clock\n          </button>\n\n          <button\n            className=\"button navbar-item is-light\"\n            type=\"button\"\n            onClick={() => (\n              this.changeName(this.generateRandomName())\n            )}\n          >\n            Set random name\n          </button>\n        </div>\n        {isClockVisible && (\n          <div className=\"subtitle is-flex is-justify-content-space-evenly\">\n            <span className=\"\">\n              Current time:\n              {' '}\n            </span>\n            <Clock name={clockName} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}